<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.board">
    <resultMap id="boardListResult" type="boardList">
        <result property="articleNo" column="articleNo" />
        <result property="title" column="title" />
        <result property="writer" column="writer" />
        <result property="regDate" column="regDate" />
        <result property="recommend" column="recommend" />
        <result property="hit" column="hit" />
        <result property="cmt" column="cmt" />
        <result property="lv" column="lv" />
    </resultMap>

    <!-- 가지고 있는 자식 글개수 -->
    <select id="selectChildCount" resultType="_int" parameterType="_int">
        SELECT COUNT(*) FROM BOARD WHERE PARENT = #{articleNo}
    </select>

    <!-- 최근 게시물 제목 5개 -->
    <select id="selectTitleLastFive" resultType="string">
        SELECT TITLE
        FROM(
            SELECT ROW_NUMBER() OVER(ORDER BY ARTICLENO DESC) NUM, TITLE
            FROM BOARD
            WHERE PUB = 1
        )
        WHERE NUM BETWEEN 1 AND 5
    </select>

    <!--  - - - - - - - - - -   글 쓰기 위한 쿼리 - - - - - - - - - - -->
    <!-- 시퀀스 조회 -->
    <select id="selectNextSequence" resultType="_int">
        SELECT SEQ_BOARD.NEXTVAL FROM DUAL
    </select>

    <!-- 해당 글번호에 대한 그룹번호 조회 -->
    <select id="selectGrpNoByArticleNo" resultType="_int" parameterType="_int">
        SELECT GRPNO FROM BOARD WHERE ARTICLENO = #{articleNo}
    </select>

    <!-- 글 추가 -->
    <insert id="insertBoard" parameterType="board">
        INSERT INTO
            BOARD(
            ARTICLENO, TITLE, CONTENT, WRITER
            , PARENT, GRPNO, IP
        )
        VALUES(
            #{articleNo} ,#{title}, #{content}, #{writer}
            , #{parent}, #{grpNo}, #{ip}
        )
    </insert>

    <!-- 파일 추가 -->
    <insert id="insertBoardFile" parameterType="boardFile">
        INSERT INTO
            BOARD_FILE(ARTICLENO, FILENAME, FILESIZE, ORIGINALFILENAME)
        VALUES(#{articleNo}, #{fileName}, #{fileSize}, #{originalFileName})
    </insert>

    <!--  - - - - - - - - - -   상세 조회 위한 쿼리 - - - - - - - - - - -->
    <!-- 글번호 존재 하는지 검색 -->
    <select id="selectBoardCountByArticleNo" resultType="_int" parameterType="_int">
        SELECT COUNT(ARTICLENO) count  FROM BOARD WHERE ARTICLENO = #{articleNo} AND PUB =1
    </select>

    <!-- 조회수 증가 -->
    <update id="updateBoardHitByArticleNo" parameterType="_int">
        UPDATE BOARD SET HIT = HIT +1 WHERE ARTICLENO = #{articleNo}
    </update>

    <!-- 추천테이블 글번호에 해당하는 아이디가 존재하는지 -->
    <select id="isAlreadyExistsID" resultType="boolean" parameterType="map">
        SELECT COUNT(*) FROM RECOMMEND_BOARD
        WHERE ID = #{id} AND ARTICLENO = #{articleNo}
    </select>

    <!-- 추천테이블에 글번호, 아이디 삽입-->
    <insert id="insertRecommend" parameterType="map">
        INSERT INTO RECOMMEND_BOARD
        VALUES(#{id}, #{articleNo})
    </insert>


    <!-- 해당 글번호 상세 조회 -->
    <select id="selectBoardDetailByArticleNo" resultType="boardDetail" parameterType="_int">
        SELECT B.ARTICLENO ARTICLENO, TITLE, CONTENT, NAME, ID,
               B.REGDATE REGDATE, HIT, RECOMMEND,  FILENAME, ORIGINALFILENAME, PROFILEIMAGE
        FROM(
                SELECT b.ARTICLENO, B.TITLE, B.CONTENT, B.WRITER, B.REGDATE, B.HIT, COUNT(r.ID) RECOMMEND
                FROM BOARD b
                LEFT JOIN RECOMMEND_BOARD r ON b.ARTICLENO = r.ARTICLENO
                WHERE b.ARTICLENO = #{articleNo} AND PUB = 1
                GROUP BY b.ARTICLENO, B.TITLE, B.CONTENT, B.WRITER, B.REGDATE, B.HIT
            )B
        JOIN MEMBER M ON B.WRITER = M.ID
        LEFT JOIN BOARD_FILE F ON B.ARTICLENO = F.ARTICLENO
    </select>

    <!--  - - - - - - - - - -   수정 위한 쿼리 - - - - - - - - - - -->
    <!-- 해당 글번호 수정 -->
    <update id="updateBoard" parameterType="board">
        UPDATE BOARD SET TITLE = #{title}, CONTENT = #{content} WHERE ARTICLENO = #{articleNo}
    </update>

    <!-- 파일 이름 조회 -->
    <select id="selectBoardFileNameByArticleNo" resultType="string" parameterType="_int">
        SELECT FILENAME FROM BOARD_FILE WHERE ARTICLENO = #{articleNo}
    </select>

    <!-- 파일 정보 수정 -->
    <update id="updateBoardFile" parameterType="boardFile">
        UPDATE BOARD_FILE SET FILENAME = #{fileName}, FILESIZE = #{fileSize}, ORIGINALFILENAME = #{originalFileName}
        WHERE ARTICLENO = #{articleNo}
    </update>

    <!-- 파일 정보 삭제 -->
    <delete id="deleteBoardFileByArticleNo" parameterType="_int">
        DELETE BOARD_FILE WHERE ARTICLENO = #{articleNo}
    </delete>

    <!--게시판 공개 수정-->
    <update id="updateBoardPubByArticleNo" parameterType="map">
        UPDATE BOARD SET PUB = #{pub} WHERE ARTICLENO = #{articleNo}
    </update>

    <!--  - - - - - - - - - -   삭제 위한 쿼리 - - - - - - - - - - -->
    <delete id="deleteBoardByArticleNo" parameterType="_int">
        DELETE FROM BOARD WHERE ARTICLENO = #{articleNo}
    </delete>

    <!--  - - - - - - - - - -   목록 위한 쿼리 - - - - - - - - - - -->
    <!-- 게시글 목록 조회 -->
    <select id="selectBoardList" resultMap="boardListResult" parameterType="map">
        SELECT *
        <include refid="selectBoardList" />
        WHERE NUM BETWEEN #{start} AND #{end}
    </select>

    <!-- 게시글 개수 조회 -->
    <select id="selectBoardListCount" resultType="_int" parameterType="map">
        SELECT count(*)
        <include refid="selectBoardList" />
    </select>

    <sql id="selectBoardList">
        FROM(
            SELECT ROWNUM NUM, bbbb.*
            FROM(
                    SELECT bbb.*, LEVEL-1 LV
                    FROM(
                            SELECT ARTICLENO, TITLE, WRITER, REGDATE, RECOMMEND, HIT, PARENT, GRPNO, PUB, CMT
                            FROM(
                                    SELECT b.ARTICLENO, b.TITLE, b.REGDATE, b.HIT, count(distinct r.ID) RECOMMEND, b.PARENT, b.GRPNO, b.PUB, m.NAME WRITER, count(distinct c.CNO) cmt
                                    FROM BOARD b
                                    JOIN MEMBER m ON WRITER = m.ID
                                    LEFT JOIN RECOMMEND_BOARD r ON b.ARTICLENO = r.ARTICLENO
                                    LEFT JOIN COMMENT_BOARD c ON b.ARTICLENO = c.ARTICLENO
                                    GROUP BY b.ARTICLENO, b.TITLE, m.NAME, b.REGDATE, b.HIT, b.PARENT, b.GRPNO, b.PUB
                            )bb
                    )bbb
                    START WITH PARENT = 0
                    CONNECT BY PRIOR ARTICLENO = PARENT
                    ORDER SIBLINGS BY GRPNO DESC
            )bbbb
            WHERE UPPER(${field}) LIKE UPPER('%'||#{query}||'%') AND PUB = 1
        )
    </sql>
</mapper>